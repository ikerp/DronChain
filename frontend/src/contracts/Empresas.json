{
  "contractName": "Empresas",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_cuenta",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_nombre",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "_cif",
          "type": "string"
        }
      ],
      "name": "EmpresaRegistrada",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cuenta",
          "type": "address"
        },
        {
          "name": "_nombre",
          "type": "string"
        },
        {
          "name": "_cif",
          "type": "string"
        }
      ],
      "name": "registrarEmpresa",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_cuenta",
          "type": "address"
        }
      ],
      "name": "getDatosEmpresa",
      "outputs": [
        {
          "name": "nombre",
          "type": "string"
        },
        {
          "name": "cif",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_cuenta",
          "type": "address"
        }
      ],
      "name": "isEmpresa",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cuenta\",\"type\":\"address\"},{\"name\":\"_nombre\",\"type\":\"string\"},{\"name\":\"_cif\",\"type\":\"string\"}],\"name\":\"registrarEmpresa\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_cuenta\",\"type\":\"address\"}],\"name\":\"getDatosEmpresa\",\"outputs\":[{\"name\":\"nombre\",\"type\":\"string\"},{\"name\":\"cif\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_cuenta\",\"type\":\"address\"}],\"name\":\"isEmpresa\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_cuenta\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_nombre\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"_cif\",\"type\":\"string\"}],\"name\":\"EmpresaRegistrada\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"getDatosEmpresa(address)\":{\"details\":\"Obtiene los datos de una empresa existente.\",\"params\":{\"_cuenta\":\"Cuenta de la empresa.\"},\"return\":\"nombre Nombre recuperado de la empresa.cif CIF recuperado de la empresa.\"},\"isEmpresa(address)\":{\"details\":\"Devuelve si la cuenta corresponde a una empresa.\",\"params\":{\"_cuenta\":\"Cuenta de la empresa.\"},\"return\":\"Booleano indicando si es empresa o no.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"registrarEmpresa(address,string,string)\":{\"details\":\"Registra una nueva empresa.\",\"params\":{\"_cif\":\"CIF de la nueva empresa.\",\"_cuenta\":\"Cuenta de la nueva empresa.\",\"_nombre\":\"Nombre de la nueva empresa.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Empresas.\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/alastria/TFE_Dronchain/smart_contracts/contracts/Empresas.sol\":\"Empresas\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/alastria/TFE_Dronchain/smart_contracts/contracts/Empresas.sol\":{\"keccak256\":\"0x1d12ae1579f2b937e065b72bb8cb7d0c2f031f1ce3899082c5110551287b3bd0\",\"urls\":[\"bzzr://a13c71a6854feac6eecdd8c539c89cebfa7e02ee97b54a9edeb115e167f246ad\"]},\"@openzeppelin/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xf79fb10e8235770eb4aea7249034076a3cc9f9119ad944fc48705bae9c9d20dc\",\"urls\":[\"bzzr://d12a11272051eb6586de8f7e0a82c04a98c9984ce8b2a6cf1ee439f65aba29a9\"]}},\"version\":1}",
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3610f95806100cf6000396000f3fe608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063715018a6146100885780638da5cb5b1461009f5780638f32d59b146100f6578063bdec58f614610125578063df6617ac146102a4578063f2fde38b146103da578063f3dc7c3e1461042b575b600080fd5b34801561009457600080fd5b5061009d610494565b005b3480156100ab57600080fd5b506100b46105cf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561010257600080fd5b5061010b6105f8565b604051808215151515815260200191505060405180910390f35b34801561013157600080fd5b506102a26004803603606081101561014857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561018557600080fd5b82018360208201111561019757600080fd5b803590602001918460018302840111640100000000831117156101b957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561021c57600080fd5b82018360208201111561022e57600080fd5b8035906020019184600183028401116401000000008311171561025057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061064f565b005b3480156102b057600080fd5b506102f3600480360360208110156102c757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109d2565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b8381101561033757808201518184015260208101905061031c565b50505050905090810190601f1680156103645780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561039d578082015181840152602081019050610382565b50505050905090810190601f1680156103ca5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b3480156103e657600080fd5b50610429600480360360208110156103fd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c5a565b005b34801561043757600080fd5b5061047a6004803603602081101561044e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ce2565b604051808215151515815260200191505060405180910390f35b61049c6105f8565b1515610510576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6106576105f8565b15156106cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b82600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610771576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4c61206375656e7461206e6f2065732076616c6964610000000000000000000081525060200191505060405180910390fd5b6080604051908101604052808573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200160011515815250600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908051906020019061084e929190610ec4565b50604082015181600201908051906020019061086b929190610ec4565b5060608201518160030160006101000a81548160ff0219169083151502179055509050507f32a6e94f06bb7d9963ffa0c55dc525e845e023bde8156141edd9db90f1ac956a848484604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200180602001838103835285818151815260200191508051906020019080838360005b8381101561092957808201518184015260208101905061090e565b50505050905090810190601f1680156109565780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561098f578082015181840152602081019050610974565b50505050905090810190601f1680156109bc5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a150505050565b60608082600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff161515610a9a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4c6120656d7072657361206e6f2065786973746500000000000000000000000081525060200191505060405180910390fd5b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b705780601f10610b4557610100808354040283529160200191610b70565b820191906000526020600020905b815481529060010190602001808311610b5357829003601f168201915b50505050509250600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c4d5780601f10610c2257610100808354040283529160200191610c4d565b820191906000526020600020905b815481529060010190602001808311610c3057829003601f168201915b5050505050915050915091565b610c626105f8565b1515610cd6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610cdf81610d3b565b50565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff169050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610e06576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526020017f646472657373000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610f0557805160ff1916838001178555610f33565b82800160010185558215610f33579182015b82811115610f32578251825591602001919060010190610f17565b5b509050610f409190610f44565b5090565b610f6691905b80821115610f62576000816000905550600101610f4a565b5090565b9056fea165627a7a72305820166d29ab3ecbb815daf479118a3ff92a95cab4bcdb082e56f71a665a7e690aaa0029",
  "deployedBytecode": "0x608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063715018a6146100885780638da5cb5b1461009f5780638f32d59b146100f6578063bdec58f614610125578063df6617ac146102a4578063f2fde38b146103da578063f3dc7c3e1461042b575b600080fd5b34801561009457600080fd5b5061009d610494565b005b3480156100ab57600080fd5b506100b46105cf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561010257600080fd5b5061010b6105f8565b604051808215151515815260200191505060405180910390f35b34801561013157600080fd5b506102a26004803603606081101561014857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561018557600080fd5b82018360208201111561019757600080fd5b803590602001918460018302840111640100000000831117156101b957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561021c57600080fd5b82018360208201111561022e57600080fd5b8035906020019184600183028401116401000000008311171561025057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061064f565b005b3480156102b057600080fd5b506102f3600480360360208110156102c757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109d2565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b8381101561033757808201518184015260208101905061031c565b50505050905090810190601f1680156103645780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561039d578082015181840152602081019050610382565b50505050905090810190601f1680156103ca5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b3480156103e657600080fd5b50610429600480360360208110156103fd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c5a565b005b34801561043757600080fd5b5061047a6004803603602081101561044e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ce2565b604051808215151515815260200191505060405180910390f35b61049c6105f8565b1515610510576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6106576105f8565b15156106cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b82600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610771576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4c61206375656e7461206e6f2065732076616c6964610000000000000000000081525060200191505060405180910390fd5b6080604051908101604052808573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200160011515815250600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908051906020019061084e929190610ec4565b50604082015181600201908051906020019061086b929190610ec4565b5060608201518160030160006101000a81548160ff0219169083151502179055509050507f32a6e94f06bb7d9963ffa0c55dc525e845e023bde8156141edd9db90f1ac956a848484604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018060200180602001838103835285818151815260200191508051906020019080838360005b8381101561092957808201518184015260208101905061090e565b50505050905090810190601f1680156109565780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561098f578082015181840152602081019050610974565b50505050905090810190601f1680156109bc5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a150505050565b60608082600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff161515610a9a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4c6120656d7072657361206e6f2065786973746500000000000000000000000081525060200191505060405180910390fd5b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b705780601f10610b4557610100808354040283529160200191610b70565b820191906000526020600020905b815481529060010190602001808311610b5357829003601f168201915b50505050509250600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c4d5780601f10610c2257610100808354040283529160200191610c4d565b820191906000526020600020905b815481529060010190602001808311610c3057829003601f168201915b5050505050915050915091565b610c626105f8565b1515610cd6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610cdf81610d3b565b50565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff169050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610e06576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526020017f646472657373000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610f0557805160ff1916838001178555610f33565b82800160010185558215610f33579182015b82811115610f32578251825591602001919060010190610f17565b5b509050610f409190610f44565b5090565b610f6691905b80821115610f62576000816000905550600101610f4a565b5090565b9056fea165627a7a72305820166d29ab3ecbb815daf479118a3ff92a95cab4bcdb082e56f71a665a7e690aaa0029",
  "sourceMap": "105:1936:3:-;;;666:10:10;657:6;;:19;;;;;;;;;;;;;;;;;;724:6;;;;;;;;;;;691:40;;720:1;691:40;;;;;;;;;;;;105:1936:3;;;;;;",
  "deployedSourceMap": "105:1936:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1599:137:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1599:137:10;;;;;;814:77;;8:9:-1;5:2;;;30:1;27;20:12;5:2;814:77:10;;;;;;;;;;;;;;;;;;;;;;;;;;;1165:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1165:90:10;;;;;;;;;;;;;;;;;;;;;;;;;;;994:285:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;994:285:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;994:285:3;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;994:285:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;994:285:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;994:285:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;994:285:3;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;994:285:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;994:285:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;994:285:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;994:285:3;;;;;;;;;;;;;;;;;;1497:250;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1497:250:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1497:250:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1497:250:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1497:250:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1885:107:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1885:107:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1885:107:10;;;;;;;;;;;;;;;;;;;;;;1928:111:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1928:111:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1928:111:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1599:137:10;1018:9;:7;:9::i;:::-;1010:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1697:1;1660:40;;1681:6;;;;;;;;;;;1660:40;;;;;;;;;;;;1727:1;1710:6;;:19;;;;;;;;;;;;;;;;;;1599:137::o;814:77::-;852:7;878:6;;;;;;;;;;;871:13;;814:77;:::o;1165:90::-;1205:4;1242:6;;;;;;;;;;;1228:20;;:10;:20;;;1221:27;;1165:90;:::o;994:285:3:-;1018:9:10;:7;:9::i;:::-;1010:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1140:7:3;749:1;731:20;;:6;:20;;;;722:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1179:37;;;;;;;;;1187:7;1179:37;;;;;;1196:7;1179:37;;;;1205:4;1179:37;;;;1211:4;1179:37;;;;;1159:8;:17;1168:7;1159:17;;;;;;;;;;;;;;;:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1231:41;1249:7;1258;1267:4;1231:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1231:41:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1231:41:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1074:1:10;994:285:3;;;:::o;1497:250::-;1615:20;1637:17;1589:7;538:8;:17;547:7;538:17;;;;;;;;;;;;;;;:24;;;;;;;;;;;;530:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1679:8;:17;1688:7;1679:17;;;;;;;;;;;;;;;:24;;1670:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1719:8;:17;1728:7;1719:17;;;;;;;;;;;;;;;:21;;1713:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1497:250;;;;:::o;1885:107:10:-;1018:9;:7;:9::i;:::-;1010:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1957:28;1976:8;1957:18;:28::i;:::-;1885:107;:::o;1928:111:3:-;1985:4;2008:8;:17;2017:7;2008:17;;;;;;;;;;;;;;;:24;;;;;;;;;;;;2001:31;;1928:111;;;:::o;2093:225:10:-;2186:1;2166:22;;:8;:22;;;;2158:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2275:8;2246:38;;2267:6;;;;;;;;;;;2246:38;;;;;;;;;;;;2303:8;2294:6;;:17;;;;;;;;;;;;;;;;;;2093:225;:::o;105:1936:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"@openzeppelin/contracts/ownership/Ownable.sol\";\n\n/** @title Empresas.*/\ncontract Empresas is Ownable {\n    struct Empresa {\n        address cuenta;\n        string nombre;\n        string cif;\n        bool existe;\n    }\n\n    mapping(address => Empresa) private empresas;\n\n    event EmpresaRegistrada(address _cuenta, string _nombre, string _cif);\n\n    /**\n     * @dev Se lanza si es llamado por cualquier cuenta de empresa que no exista\n     */\n    modifier empresaValida(address _cuenta) {\n        require(empresas[_cuenta].existe, \"La empresa no existe\");\n        _;\n    }\n\n    /**\n     * @dev Se lanza si la cuenta no es valida\n     */\n    modifier cuentaValida(address cuenta) {\n        require (cuenta != address(0), 'La cuenta no es valida');\n        _;\n    }\n\n    /**@dev Registra una nueva empresa.\n     * @param _cuenta Cuenta de la nueva empresa.\n     * @param _nombre Nombre de la nueva empresa.\n     * @param _cif CIF de la nueva empresa.\n     */\n    function registrarEmpresa(\n        address _cuenta,\n        string memory _nombre,\n        string memory _cif\n    ) public onlyOwner cuentaValida(_cuenta) {\n        empresas[_cuenta] = Empresa(_cuenta, _nombre, _cif, true);\n        emit EmpresaRegistrada(_cuenta, _nombre, _cif);\n    }\n\n    /**@dev Obtiene los datos de una empresa existente.\n     * @param _cuenta Cuenta de la empresa.\n     * @return nombre Nombre recuperado de la empresa.\n     * @return cif CIF recuperado de la empresa.\n     */\n    function getDatosEmpresa(address _cuenta)\n        public\n        view\n        empresaValida(_cuenta)\n        returns (string memory nombre, string memory cif)\n    {\n        nombre = empresas[_cuenta].nombre;\n        cif = empresas[_cuenta].cif;\n    }\n\n    /**\n     * @dev Devuelve si la cuenta corresponde a una empresa.\n     * @param _cuenta Cuenta de la empresa.\n     * @return Booleano indicando si es empresa o no.\n     */\n    function isEmpresa(address _cuenta) public view returns (bool) {\n        return empresas[_cuenta].existe;\n    }\n}\n",
  "sourcePath": "/home/alastria/TFE_Dronchain/smart_contracts/contracts/Empresas.sol",
  "ast": {
    "absolutePath": "/home/alastria/TFE_Dronchain/smart_contracts/contracts/Empresas.sol",
    "exportedSymbols": {
      "Empresas": [
        941
      ]
    },
    "id": 942,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 815,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts/ownership/Ownable.sol",
        "file": "@openzeppelin/contracts/ownership/Ownable.sol",
        "id": 816,
        "nodeType": "ImportDirective",
        "scope": 942,
        "sourceUnit": 1613,
        "src": "25:55:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 817,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1612,
              "src": "126:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1612",
                "typeString": "contract Ownable"
              }
            },
            "id": 818,
            "nodeType": "InheritanceSpecifier",
            "src": "126:7:3"
          }
        ],
        "contractDependencies": [
          1612
        ],
        "contractKind": "contract",
        "documentation": "@title Empresas.",
        "fullyImplemented": true,
        "id": 941,
        "linearizedBaseContracts": [
          941,
          1612
        ],
        "name": "Empresas",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Empresas.Empresa",
            "id": 827,
            "members": [
              {
                "constant": false,
                "id": 820,
                "name": "cuenta",
                "nodeType": "VariableDeclaration",
                "scope": 827,
                "src": "165:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 819,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "165:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 822,
                "name": "nombre",
                "nodeType": "VariableDeclaration",
                "scope": 827,
                "src": "189:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 821,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "189:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 824,
                "name": "cif",
                "nodeType": "VariableDeclaration",
                "scope": 827,
                "src": "212:10:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 823,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "212:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 826,
                "name": "existe",
                "nodeType": "VariableDeclaration",
                "scope": 827,
                "src": "232:11:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 825,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "232:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Empresa",
            "nodeType": "StructDefinition",
            "scope": 941,
            "src": "140:110:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 831,
            "name": "empresas",
            "nodeType": "VariableDeclaration",
            "scope": 941,
            "src": "256:44:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Empresa_$827_storage_$",
              "typeString": "mapping(address => struct Empresas.Empresa)"
            },
            "typeName": {
              "id": 830,
              "keyType": {
                "id": 828,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "264:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "256:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Empresa_$827_storage_$",
                "typeString": "mapping(address => struct Empresas.Empresa)"
              },
              "valueType": {
                "contractScope": null,
                "id": 829,
                "name": "Empresa",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 827,
                "src": "275:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Empresa_$827_storage_ptr",
                  "typeString": "struct Empresas.Empresa"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 839,
            "name": "EmpresaRegistrada",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 838,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 833,
                  "indexed": false,
                  "name": "_cuenta",
                  "nodeType": "VariableDeclaration",
                  "scope": 839,
                  "src": "331:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 832,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "331:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 835,
                  "indexed": false,
                  "name": "_nombre",
                  "nodeType": "VariableDeclaration",
                  "scope": 839,
                  "src": "348:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 834,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "348:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 837,
                  "indexed": false,
                  "name": "_cif",
                  "nodeType": "VariableDeclaration",
                  "scope": 839,
                  "src": "364:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 836,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "364:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "330:46:3"
            },
            "src": "307:70:3"
          },
          {
            "body": {
              "id": 852,
              "nodeType": "Block",
              "src": "520:85:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 844,
                            "name": "empresas",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 831,
                            "src": "538:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Empresa_$827_storage_$",
                              "typeString": "mapping(address => struct Empresas.Empresa storage ref)"
                            }
                          },
                          "id": 846,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 845,
                            "name": "_cuenta",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 841,
                            "src": "547:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "538:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Empresa_$827_storage",
                            "typeString": "struct Empresas.Empresa storage ref"
                          }
                        },
                        "id": 847,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "existe",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 826,
                        "src": "538:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c6120656d7072657361206e6f20657869737465",
                        "id": 848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "564:22:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6de0380b85eb7c39da7e873515c3db645948743fae752c33f2304966530b317",
                          "typeString": "literal_string \"La empresa no existe\""
                        },
                        "value": "La empresa no existe"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d6de0380b85eb7c39da7e873515c3db645948743fae752c33f2304966530b317",
                          "typeString": "literal_string \"La empresa no existe\""
                        }
                      ],
                      "id": 843,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2857,
                        2858
                      ],
                      "referencedDeclaration": 2858,
                      "src": "530:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "530:57:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 850,
                  "nodeType": "ExpressionStatement",
                  "src": "530:57:3"
                },
                {
                  "id": 851,
                  "nodeType": "PlaceholderStatement",
                  "src": "597:1:3"
                }
              ]
            },
            "documentation": "@dev Se lanza si es llamado por cualquier cuenta de empresa que no exista",
            "id": 853,
            "name": "empresaValida",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 841,
                  "name": "_cuenta",
                  "nodeType": "VariableDeclaration",
                  "scope": 853,
                  "src": "503:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 840,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "503:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "502:17:3"
            },
            "src": "480:125:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 867,
              "nodeType": "Block",
              "src": "712:84:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 858,
                          "name": "cuenta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 855,
                          "src": "731:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "749:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 859,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "741:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "741:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "731:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c61206375656e7461206e6f2065732076616c696461",
                        "id": 863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "753:24:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9abf2db62bfb0d028c077e6f104330eafe8c57ee9c9191209d9502c19bcf77d2",
                          "typeString": "literal_string \"La cuenta no es valida\""
                        },
                        "value": "La cuenta no es valida"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9abf2db62bfb0d028c077e6f104330eafe8c57ee9c9191209d9502c19bcf77d2",
                          "typeString": "literal_string \"La cuenta no es valida\""
                        }
                      ],
                      "id": 857,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2857,
                        2858
                      ],
                      "referencedDeclaration": 2858,
                      "src": "722:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "722:56:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 865,
                  "nodeType": "ExpressionStatement",
                  "src": "722:56:3"
                },
                {
                  "id": 866,
                  "nodeType": "PlaceholderStatement",
                  "src": "788:1:3"
                }
              ]
            },
            "documentation": "@dev Se lanza si la cuenta no es valida",
            "id": 868,
            "name": "cuentaValida",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 855,
                  "name": "cuenta",
                  "nodeType": "VariableDeclaration",
                  "scope": 868,
                  "src": "696:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 854,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "696:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "695:16:3"
            },
            "src": "674:122:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 899,
              "nodeType": "Block",
              "src": "1149:130:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 882,
                        "name": "empresas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 831,
                        "src": "1159:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Empresa_$827_storage_$",
                          "typeString": "mapping(address => struct Empresas.Empresa storage ref)"
                        }
                      },
                      "id": 884,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 883,
                        "name": "_cuenta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 870,
                        "src": "1168:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1159:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Empresa_$827_storage",
                        "typeString": "struct Empresas.Empresa storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 886,
                          "name": "_cuenta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 870,
                          "src": "1187:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 887,
                          "name": "_nombre",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 872,
                          "src": "1196:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 888,
                          "name": "_cif",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 874,
                          "src": "1205:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1211:4:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 885,
                        "name": "Empresa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 827,
                        "src": "1179:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Empresa_$827_storage_ptr_$",
                          "typeString": "type(struct Empresas.Empresa storage pointer)"
                        }
                      },
                      "id": 890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1179:37:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Empresa_$827_memory",
                        "typeString": "struct Empresas.Empresa memory"
                      }
                    },
                    "src": "1159:57:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Empresa_$827_storage",
                      "typeString": "struct Empresas.Empresa storage ref"
                    }
                  },
                  "id": 892,
                  "nodeType": "ExpressionStatement",
                  "src": "1159:57:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 894,
                        "name": "_cuenta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 870,
                        "src": "1249:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 895,
                        "name": "_nombre",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 872,
                        "src": "1258:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 896,
                        "name": "_cif",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 874,
                        "src": "1267:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 893,
                      "name": "EmpresaRegistrada",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 839,
                      "src": "1231:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory,string memory)"
                      }
                    },
                    "id": 897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1231:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 898,
                  "nodeType": "EmitStatement",
                  "src": "1226:46:3"
                }
              ]
            },
            "documentation": "@dev Registra una nueva empresa.\n@param _cuenta Cuenta de la nueva empresa.\n@param _nombre Nombre de la nueva empresa.\n@param _cif CIF de la nueva empresa.",
            "id": 900,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 877,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 876,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1545,
                  "src": "1117:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1117:9:3"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 879,
                    "name": "_cuenta",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 870,
                    "src": "1140:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 880,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 878,
                  "name": "cuentaValida",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 868,
                  "src": "1127:12:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1127:21:3"
              }
            ],
            "name": "registrarEmpresa",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 870,
                  "name": "_cuenta",
                  "nodeType": "VariableDeclaration",
                  "scope": 900,
                  "src": "1029:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 869,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1029:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 872,
                  "name": "_nombre",
                  "nodeType": "VariableDeclaration",
                  "scope": 900,
                  "src": "1054:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 871,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1054:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 874,
                  "name": "_cif",
                  "nodeType": "VariableDeclaration",
                  "scope": 900,
                  "src": "1085:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 873,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1085:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1019:90:3"
            },
            "returnParameters": {
              "id": 881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1149:0:3"
            },
            "scope": 941,
            "src": "994:285:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 926,
              "nodeType": "Block",
              "src": "1660:87:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 912,
                      "name": "nombre",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 908,
                      "src": "1670:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 913,
                          "name": "empresas",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 831,
                          "src": "1679:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Empresa_$827_storage_$",
                            "typeString": "mapping(address => struct Empresas.Empresa storage ref)"
                          }
                        },
                        "id": 915,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 914,
                          "name": "_cuenta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 902,
                          "src": "1688:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1679:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Empresa_$827_storage",
                          "typeString": "struct Empresas.Empresa storage ref"
                        }
                      },
                      "id": 916,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "nombre",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 822,
                      "src": "1679:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "1670:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 918,
                  "nodeType": "ExpressionStatement",
                  "src": "1670:33:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 919,
                      "name": "cif",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 910,
                      "src": "1713:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 920,
                          "name": "empresas",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 831,
                          "src": "1719:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Empresa_$827_storage_$",
                            "typeString": "mapping(address => struct Empresas.Empresa storage ref)"
                          }
                        },
                        "id": 922,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 921,
                          "name": "_cuenta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 902,
                          "src": "1728:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1719:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Empresa_$827_storage",
                          "typeString": "struct Empresas.Empresa storage ref"
                        }
                      },
                      "id": 923,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "cif",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 824,
                      "src": "1719:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "1713:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 925,
                  "nodeType": "ExpressionStatement",
                  "src": "1713:27:3"
                }
              ]
            },
            "documentation": "@dev Obtiene los datos de una empresa existente.\n@param _cuenta Cuenta de la empresa.\n@return nombre Nombre recuperado de la empresa.\n@return cif CIF recuperado de la empresa.",
            "id": 927,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 905,
                    "name": "_cuenta",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 902,
                    "src": "1589:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 906,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 904,
                  "name": "empresaValida",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 853,
                  "src": "1575:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1575:22:3"
              }
            ],
            "name": "getDatosEmpresa",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 903,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 902,
                  "name": "_cuenta",
                  "nodeType": "VariableDeclaration",
                  "scope": 927,
                  "src": "1522:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 901,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1522:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1521:17:3"
            },
            "returnParameters": {
              "id": 911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 908,
                  "name": "nombre",
                  "nodeType": "VariableDeclaration",
                  "scope": 927,
                  "src": "1615:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 907,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1615:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 910,
                  "name": "cif",
                  "nodeType": "VariableDeclaration",
                  "scope": 927,
                  "src": "1637:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 909,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1637:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1614:41:3"
            },
            "scope": 941,
            "src": "1497:250:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 939,
              "nodeType": "Block",
              "src": "1991:48:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 934,
                        "name": "empresas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 831,
                        "src": "2008:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Empresa_$827_storage_$",
                          "typeString": "mapping(address => struct Empresas.Empresa storage ref)"
                        }
                      },
                      "id": 936,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 935,
                        "name": "_cuenta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 929,
                        "src": "2017:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2008:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Empresa_$827_storage",
                        "typeString": "struct Empresas.Empresa storage ref"
                      }
                    },
                    "id": 937,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "existe",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 826,
                    "src": "2008:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 933,
                  "id": 938,
                  "nodeType": "Return",
                  "src": "2001:31:3"
                }
              ]
            },
            "documentation": "@dev Devuelve si la cuenta corresponde a una empresa.\n@param _cuenta Cuenta de la empresa.\n@return Booleano indicando si es empresa o no.",
            "id": 940,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isEmpresa",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 930,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 929,
                  "name": "_cuenta",
                  "nodeType": "VariableDeclaration",
                  "scope": 940,
                  "src": "1947:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 928,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1947:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1946:17:3"
            },
            "returnParameters": {
              "id": 933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 932,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 940,
                  "src": "1985:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 931,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1985:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1984:6:3"
            },
            "scope": 941,
            "src": "1928:111:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 942,
        "src": "105:1936:3"
      }
    ],
    "src": "0:2042:3"
  },
  "legacyAST": {
    "absolutePath": "/home/alastria/TFE_Dronchain/smart_contracts/contracts/Empresas.sol",
    "exportedSymbols": {
      "Empresas": [
        941
      ]
    },
    "id": 942,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 815,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts/ownership/Ownable.sol",
        "file": "@openzeppelin/contracts/ownership/Ownable.sol",
        "id": 816,
        "nodeType": "ImportDirective",
        "scope": 942,
        "sourceUnit": 1613,
        "src": "25:55:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 817,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1612,
              "src": "126:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1612",
                "typeString": "contract Ownable"
              }
            },
            "id": 818,
            "nodeType": "InheritanceSpecifier",
            "src": "126:7:3"
          }
        ],
        "contractDependencies": [
          1612
        ],
        "contractKind": "contract",
        "documentation": "@title Empresas.",
        "fullyImplemented": true,
        "id": 941,
        "linearizedBaseContracts": [
          941,
          1612
        ],
        "name": "Empresas",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Empresas.Empresa",
            "id": 827,
            "members": [
              {
                "constant": false,
                "id": 820,
                "name": "cuenta",
                "nodeType": "VariableDeclaration",
                "scope": 827,
                "src": "165:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 819,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "165:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 822,
                "name": "nombre",
                "nodeType": "VariableDeclaration",
                "scope": 827,
                "src": "189:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 821,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "189:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 824,
                "name": "cif",
                "nodeType": "VariableDeclaration",
                "scope": 827,
                "src": "212:10:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 823,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "212:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 826,
                "name": "existe",
                "nodeType": "VariableDeclaration",
                "scope": 827,
                "src": "232:11:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 825,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "232:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Empresa",
            "nodeType": "StructDefinition",
            "scope": 941,
            "src": "140:110:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 831,
            "name": "empresas",
            "nodeType": "VariableDeclaration",
            "scope": 941,
            "src": "256:44:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Empresa_$827_storage_$",
              "typeString": "mapping(address => struct Empresas.Empresa)"
            },
            "typeName": {
              "id": 830,
              "keyType": {
                "id": 828,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "264:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "256:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Empresa_$827_storage_$",
                "typeString": "mapping(address => struct Empresas.Empresa)"
              },
              "valueType": {
                "contractScope": null,
                "id": 829,
                "name": "Empresa",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 827,
                "src": "275:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Empresa_$827_storage_ptr",
                  "typeString": "struct Empresas.Empresa"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 839,
            "name": "EmpresaRegistrada",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 838,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 833,
                  "indexed": false,
                  "name": "_cuenta",
                  "nodeType": "VariableDeclaration",
                  "scope": 839,
                  "src": "331:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 832,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "331:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 835,
                  "indexed": false,
                  "name": "_nombre",
                  "nodeType": "VariableDeclaration",
                  "scope": 839,
                  "src": "348:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 834,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "348:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 837,
                  "indexed": false,
                  "name": "_cif",
                  "nodeType": "VariableDeclaration",
                  "scope": 839,
                  "src": "364:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 836,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "364:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "330:46:3"
            },
            "src": "307:70:3"
          },
          {
            "body": {
              "id": 852,
              "nodeType": "Block",
              "src": "520:85:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 844,
                            "name": "empresas",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 831,
                            "src": "538:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Empresa_$827_storage_$",
                              "typeString": "mapping(address => struct Empresas.Empresa storage ref)"
                            }
                          },
                          "id": 846,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 845,
                            "name": "_cuenta",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 841,
                            "src": "547:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "538:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Empresa_$827_storage",
                            "typeString": "struct Empresas.Empresa storage ref"
                          }
                        },
                        "id": 847,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "existe",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 826,
                        "src": "538:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c6120656d7072657361206e6f20657869737465",
                        "id": 848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "564:22:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6de0380b85eb7c39da7e873515c3db645948743fae752c33f2304966530b317",
                          "typeString": "literal_string \"La empresa no existe\""
                        },
                        "value": "La empresa no existe"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d6de0380b85eb7c39da7e873515c3db645948743fae752c33f2304966530b317",
                          "typeString": "literal_string \"La empresa no existe\""
                        }
                      ],
                      "id": 843,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2857,
                        2858
                      ],
                      "referencedDeclaration": 2858,
                      "src": "530:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "530:57:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 850,
                  "nodeType": "ExpressionStatement",
                  "src": "530:57:3"
                },
                {
                  "id": 851,
                  "nodeType": "PlaceholderStatement",
                  "src": "597:1:3"
                }
              ]
            },
            "documentation": "@dev Se lanza si es llamado por cualquier cuenta de empresa que no exista",
            "id": 853,
            "name": "empresaValida",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 841,
                  "name": "_cuenta",
                  "nodeType": "VariableDeclaration",
                  "scope": 853,
                  "src": "503:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 840,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "503:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "502:17:3"
            },
            "src": "480:125:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 867,
              "nodeType": "Block",
              "src": "712:84:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 858,
                          "name": "cuenta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 855,
                          "src": "731:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "749:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 859,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "741:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "741:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "731:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c61206375656e7461206e6f2065732076616c696461",
                        "id": 863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "753:24:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9abf2db62bfb0d028c077e6f104330eafe8c57ee9c9191209d9502c19bcf77d2",
                          "typeString": "literal_string \"La cuenta no es valida\""
                        },
                        "value": "La cuenta no es valida"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9abf2db62bfb0d028c077e6f104330eafe8c57ee9c9191209d9502c19bcf77d2",
                          "typeString": "literal_string \"La cuenta no es valida\""
                        }
                      ],
                      "id": 857,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2857,
                        2858
                      ],
                      "referencedDeclaration": 2858,
                      "src": "722:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "722:56:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 865,
                  "nodeType": "ExpressionStatement",
                  "src": "722:56:3"
                },
                {
                  "id": 866,
                  "nodeType": "PlaceholderStatement",
                  "src": "788:1:3"
                }
              ]
            },
            "documentation": "@dev Se lanza si la cuenta no es valida",
            "id": 868,
            "name": "cuentaValida",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 855,
                  "name": "cuenta",
                  "nodeType": "VariableDeclaration",
                  "scope": 868,
                  "src": "696:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 854,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "696:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "695:16:3"
            },
            "src": "674:122:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 899,
              "nodeType": "Block",
              "src": "1149:130:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 882,
                        "name": "empresas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 831,
                        "src": "1159:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Empresa_$827_storage_$",
                          "typeString": "mapping(address => struct Empresas.Empresa storage ref)"
                        }
                      },
                      "id": 884,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 883,
                        "name": "_cuenta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 870,
                        "src": "1168:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1159:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Empresa_$827_storage",
                        "typeString": "struct Empresas.Empresa storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 886,
                          "name": "_cuenta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 870,
                          "src": "1187:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 887,
                          "name": "_nombre",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 872,
                          "src": "1196:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 888,
                          "name": "_cif",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 874,
                          "src": "1205:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1211:4:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 885,
                        "name": "Empresa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 827,
                        "src": "1179:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Empresa_$827_storage_ptr_$",
                          "typeString": "type(struct Empresas.Empresa storage pointer)"
                        }
                      },
                      "id": 890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1179:37:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Empresa_$827_memory",
                        "typeString": "struct Empresas.Empresa memory"
                      }
                    },
                    "src": "1159:57:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Empresa_$827_storage",
                      "typeString": "struct Empresas.Empresa storage ref"
                    }
                  },
                  "id": 892,
                  "nodeType": "ExpressionStatement",
                  "src": "1159:57:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 894,
                        "name": "_cuenta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 870,
                        "src": "1249:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 895,
                        "name": "_nombre",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 872,
                        "src": "1258:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 896,
                        "name": "_cif",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 874,
                        "src": "1267:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 893,
                      "name": "EmpresaRegistrada",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 839,
                      "src": "1231:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory,string memory)"
                      }
                    },
                    "id": 897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1231:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 898,
                  "nodeType": "EmitStatement",
                  "src": "1226:46:3"
                }
              ]
            },
            "documentation": "@dev Registra una nueva empresa.\n@param _cuenta Cuenta de la nueva empresa.\n@param _nombre Nombre de la nueva empresa.\n@param _cif CIF de la nueva empresa.",
            "id": 900,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 877,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 876,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1545,
                  "src": "1117:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1117:9:3"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 879,
                    "name": "_cuenta",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 870,
                    "src": "1140:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 880,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 878,
                  "name": "cuentaValida",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 868,
                  "src": "1127:12:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1127:21:3"
              }
            ],
            "name": "registrarEmpresa",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 870,
                  "name": "_cuenta",
                  "nodeType": "VariableDeclaration",
                  "scope": 900,
                  "src": "1029:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 869,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1029:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 872,
                  "name": "_nombre",
                  "nodeType": "VariableDeclaration",
                  "scope": 900,
                  "src": "1054:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 871,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1054:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 874,
                  "name": "_cif",
                  "nodeType": "VariableDeclaration",
                  "scope": 900,
                  "src": "1085:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 873,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1085:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1019:90:3"
            },
            "returnParameters": {
              "id": 881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1149:0:3"
            },
            "scope": 941,
            "src": "994:285:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 926,
              "nodeType": "Block",
              "src": "1660:87:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 912,
                      "name": "nombre",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 908,
                      "src": "1670:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 913,
                          "name": "empresas",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 831,
                          "src": "1679:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Empresa_$827_storage_$",
                            "typeString": "mapping(address => struct Empresas.Empresa storage ref)"
                          }
                        },
                        "id": 915,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 914,
                          "name": "_cuenta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 902,
                          "src": "1688:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1679:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Empresa_$827_storage",
                          "typeString": "struct Empresas.Empresa storage ref"
                        }
                      },
                      "id": 916,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "nombre",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 822,
                      "src": "1679:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "1670:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 918,
                  "nodeType": "ExpressionStatement",
                  "src": "1670:33:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 919,
                      "name": "cif",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 910,
                      "src": "1713:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 920,
                          "name": "empresas",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 831,
                          "src": "1719:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Empresa_$827_storage_$",
                            "typeString": "mapping(address => struct Empresas.Empresa storage ref)"
                          }
                        },
                        "id": 922,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 921,
                          "name": "_cuenta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 902,
                          "src": "1728:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1719:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Empresa_$827_storage",
                          "typeString": "struct Empresas.Empresa storage ref"
                        }
                      },
                      "id": 923,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "cif",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 824,
                      "src": "1719:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "1713:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 925,
                  "nodeType": "ExpressionStatement",
                  "src": "1713:27:3"
                }
              ]
            },
            "documentation": "@dev Obtiene los datos de una empresa existente.\n@param _cuenta Cuenta de la empresa.\n@return nombre Nombre recuperado de la empresa.\n@return cif CIF recuperado de la empresa.",
            "id": 927,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 905,
                    "name": "_cuenta",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 902,
                    "src": "1589:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 906,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 904,
                  "name": "empresaValida",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 853,
                  "src": "1575:13:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1575:22:3"
              }
            ],
            "name": "getDatosEmpresa",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 903,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 902,
                  "name": "_cuenta",
                  "nodeType": "VariableDeclaration",
                  "scope": 927,
                  "src": "1522:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 901,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1522:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1521:17:3"
            },
            "returnParameters": {
              "id": 911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 908,
                  "name": "nombre",
                  "nodeType": "VariableDeclaration",
                  "scope": 927,
                  "src": "1615:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 907,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1615:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 910,
                  "name": "cif",
                  "nodeType": "VariableDeclaration",
                  "scope": 927,
                  "src": "1637:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 909,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1637:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1614:41:3"
            },
            "scope": 941,
            "src": "1497:250:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 939,
              "nodeType": "Block",
              "src": "1991:48:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 934,
                        "name": "empresas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 831,
                        "src": "2008:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Empresa_$827_storage_$",
                          "typeString": "mapping(address => struct Empresas.Empresa storage ref)"
                        }
                      },
                      "id": 936,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 935,
                        "name": "_cuenta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 929,
                        "src": "2017:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2008:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Empresa_$827_storage",
                        "typeString": "struct Empresas.Empresa storage ref"
                      }
                    },
                    "id": 937,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "existe",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 826,
                    "src": "2008:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 933,
                  "id": 938,
                  "nodeType": "Return",
                  "src": "2001:31:3"
                }
              ]
            },
            "documentation": "@dev Devuelve si la cuenta corresponde a una empresa.\n@param _cuenta Cuenta de la empresa.\n@return Booleano indicando si es empresa o no.",
            "id": 940,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isEmpresa",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 930,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 929,
                  "name": "_cuenta",
                  "nodeType": "VariableDeclaration",
                  "scope": 940,
                  "src": "1947:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 928,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1947:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1946:17:3"
            },
            "returnParameters": {
              "id": 933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 932,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 940,
                  "src": "1985:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 931,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1985:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1984:6:3"
            },
            "scope": 941,
            "src": "1928:111:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 942,
        "src": "105:1936:3"
      }
    ],
    "src": "0:2042:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "83584648538": {
      "events": {
        "0x32a6e94f06bb7d9963ffa0c55dc525e845e023bde8156141edd9db90f1ac956a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "_cuenta",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_nombre",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "_cif",
              "type": "string"
            }
          ],
          "name": "EmpresaRegistrada",
          "type": "event",
          "signature": "0x32a6e94f06bb7d9963ffa0c55dc525e845e023bde8156141edd9db90f1ac956a"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        }
      },
      "links": {},
      "address": "0xc61Bb63BEaD349cac44154c54F3f5c5C065BaFb2",
      "transactionHash": "0x105dad5026886ab2a715642091b5ddb833d568b286e1ac1b66e6d6fc33018a57"
    }
  },
  "schemaVersion": "3.0.9",
  "updatedAt": "2020-03-10T08:07:29.281Z",
  "devdoc": {
    "methods": {
      "getDatosEmpresa(address)": {
        "details": "Obtiene los datos de una empresa existente.",
        "params": {
          "_cuenta": "Cuenta de la empresa."
        },
        "return": "nombre Nombre recuperado de la empresa.cif CIF recuperado de la empresa."
      },
      "isEmpresa(address)": {
        "details": "Devuelve si la cuenta corresponde a una empresa.",
        "params": {
          "_cuenta": "Cuenta de la empresa."
        },
        "return": "Booleano indicando si es empresa o no."
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "registrarEmpresa(address,string,string)": {
        "details": "Registra una nueva empresa.",
        "params": {
          "_cif": "CIF de la nueva empresa.",
          "_cuenta": "Cuenta de la nueva empresa.",
          "_nombre": "Nombre de la nueva empresa."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Empresas."
  },
  "userdoc": {
    "methods": {}
  }
}